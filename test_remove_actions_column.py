#!/usr/bin/env python3
"""
Script de prueba para verificar que la columna de acciones fue removida del gestor de usuarios
"""
import os
import sys
import requests
from urllib.parse import urljoin

def test_user_management_actions_removal():
    """Prueba que la columna de acciones fue removida del gestor de usuarios"""
    base_url = "http://localhost:5000"
    usuarios_url = urljoin(base_url, "/admin/usuarios")
    
    print("üóëÔ∏è Verificando remoci√≥n de columna de acciones en gestor de usuarios...")
    print("=" * 70)
    
    # Verificar que el servidor est√© ejecut√°ndose
    try:
        response = requests.get(base_url, timeout=5)
        print(f"‚úÖ Servidor Flask accesible: {response.status_code}")
    except requests.exceptions.RequestException as e:
        print(f"‚ùå Error conectando al servidor Flask: {e}")
        return False
    
    # Verificar que la p√°gina de usuarios sea accesible
    try:
        response = requests.get(usuarios_url, timeout=5)
        print(f"‚úÖ P√°gina de gesti√≥n de usuarios accesible: {response.status_code}")
        
        content = response.text
        
        # Verificar que la columna "Acciones" fue removida del encabezado
        if '<th>Acciones</th>' not in content:
            print("‚úÖ Columna 'Acciones' removida del encabezado de la tabla")
        else:
            print("‚ùå Columna 'Acciones' A√öN PRESENTE en el encabezado")
            
        # Verificar que los botones de editar fueron removidos
        if 'btn-warning' not in content and 'fa-edit' not in content:
            print("‚úÖ Botones de editar removidos")
        else:
            print("‚ùå Botones de editar A√öN PRESENTES")
            
        # Verificar que los botones de eliminar fueron removidos
        if 'btn-delete' not in content and 'fa-trash' not in content:
            print("‚úÖ Botones de eliminar removidos")
        else:
            print("‚ùå Botones de eliminar A√öN PRESENTES")
            
        # Verificar que los modales de confirmaci√≥n fueron removidos
        if 'deleteModal' not in content:
            print("‚úÖ Modales de confirmaci√≥n de eliminaci√≥n removidos")
        else:
            print("‚ùå Modales de confirmaci√≥n A√öN PRESENTES")
            
        # Verificar que el colspan fue actualizado correctamente
        if 'colspan="7"' in content:
            print("‚úÖ Colspan actualizado correctamente (7 columnas)")
        elif 'colspan="8"' in content:
            print("‚ùå Colspan NO actualizado (todav√≠a muestra 8 columnas)")
        else:
            print("‚ÑπÔ∏è No se encontr√≥ mensaje de 'No hay usuarios registrados'")
            
        # Verificar las columnas que deben estar presentes
        expected_columns = ['ID', 'Nombre', 'Apellido', 'Email', 'Tel√©fono', 'Rol', 'Laboratorios']
        missing_columns = []
        
        for column in expected_columns:
            if f'<th>{column}</th>' in content:
                print(f"‚úÖ Columna '{column}' presente")
            else:
                missing_columns.append(column)
                print(f"‚ùå Columna '{column}' FALTANTE")
                
        if not missing_columns:
            print("‚úÖ Todas las columnas esperadas est√°n presentes")
            
        # Verificar que el bot√≥n de sincronizaci√≥n sigue presente
        if 'Sincronizar Ahora' in content:
            print("‚úÖ Bot√≥n de sincronizaci√≥n con Keycloak mantenido")
        else:
            print("‚ùå Bot√≥n de sincronizaci√≥n removido inesperadamente")
            
    except requests.exceptions.RequestException as e:
        print(f"‚ùå Error accediendo a la p√°gina de usuarios: {e}")
        return False
    
    print("\nüìã Resumen de cambios aplicados:")
    print("- ‚ùå Columna 'Acciones' removida del encabezado")
    print("- ‚ùå Botones de editar (l√°piz) removidos")
    print("- ‚ùå Botones de eliminar (basura) removidos")
    print("- ‚ùå Modales de confirmaci√≥n de eliminaci√≥n removidos")
    print("- ‚úÖ Colspan actualizado de 8 a 7 columnas")
    print("- ‚úÖ Funcionalidad de sincronizaci√≥n con Keycloak mantenida")
    
    print("\nüéØ Columnas restantes en el gestor:")
    print("1. ID - Identificador √∫nico del usuario")
    print("2. Nombre - Nombre del usuario") 
    print("3. Apellido - Apellido del usuario")
    print("4. Email - Direcci√≥n de correo electr√≥nico")
    print("5. Tel√©fono - N√∫mero de tel√©fono")
    print("6. Rol - Administrador o T√©cnico")
    print("7. Laboratorios - Laboratorios asignados")
    
    return True

def main():
    """Funci√≥n principal"""
    print("üóëÔ∏è Test de Remoci√≥n de Columna de Acciones - Gestor de Usuarios")
    print("=" * 70)
    
    if test_user_management_actions_removal():
        print("\n‚úÖ Verificaci√≥n completada correctamente")
        print("\nüìñ Para verificar manualmente:")
        print("1. Abra http://localhost:5000/admin/usuarios")
        print("2. Verifique que NO hay columna 'Acciones'")
        print("3. Confirme que NO hay botones de editar/eliminar")
        print("4. El bot√≥n de 'Sincronizar Ahora' debe seguir presente")
        print("\nüéâ La columna de acciones ha sido removida exitosamente!")
    else:
        print("\n‚ùå Algunas verificaciones fallaron")
        return 1
    
    return 0

if __name__ == "__main__":
    sys.exit(main())
