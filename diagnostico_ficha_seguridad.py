#!/usr/bin/env python3
"""
Script de diagn√≥stico para el problema de ficha de seguridad
"""

import os
import sys
import base64
import requests
import json

# Agregar el directorio ra√≠z al path
sys.path.insert(0, os.path.dirname(os.path.abspath(__file__)))

def test_google_script_connection():
    """
    Prueba la conexi√≥n directa al Google Apps Script
    """
    print("üîç Probando conexi√≥n con Google Apps Script...")
    
    script_url = os.environ.get('GOOGLE_SCRIPT_URL')
    secure_token = os.environ.get('GOOGLE_DRIVE_SECURE_TOKEN', '1250')
    
    if not script_url:
        print("‚ùå GOOGLE_SCRIPT_URL no est√° configurada")
        return False
    
    print(f"‚úÖ Script URL: {script_url}")
    print(f"‚úÖ Token: {secure_token}")
    
    # Probar con una acci√≥n conocida que funciona
    test_data = {
        'action': 'sendEmail',  # Esta acci√≥n ya funciona
        'token': str(secure_token),
        'to': 'test@example.com',
        'subject': 'Test de conexi√≥n',
        'htmlBody': 'Este es un test de conexi√≥n'
    }
    
    try:
        print("üì§ Enviando request de prueba...")
        response = requests.post(
            script_url,
            json=test_data,
            headers={'Content-Type': 'application/json'},
            timeout=30
        )
        
        print(f"üì• Status Code: {response.status_code}")
        print(f"üì• Response: {response.text}")
        
        if response.status_code == 200:
            result = response.json()
            if result.get('success'):
                print("‚úÖ Conexi√≥n exitosa con Google Apps Script")
                return True
            else:
                print(f"‚ùå Error del script: {result.get('error')}")
                return False
        else:
            print(f"‚ùå Error HTTP: {response.status_code}")
            return False
            
    except Exception as e:
        print(f"‚ùå Excepci√≥n: {str(e)}")
        return False

def test_ficha_seguridad_action():
    """
    Prueba espec√≠ficamente la acci√≥n uploadFichaSeguridad
    """
    print("\nüîç Probando acci√≥n uploadFichaSeguridad...")
    
    script_url = os.environ.get('GOOGLE_SCRIPT_URL')
    secure_token = os.environ.get('GOOGLE_DRIVE_SECURE_TOKEN', '1250')
    
    if not script_url:
        print("‚ùå GOOGLE_SCRIPT_URL no est√° configurada")
        return False
    
    # Crear un archivo de prueba peque√±o
    test_content = b"Test PDF content for ficha de seguridad"
    test_b64 = base64.b64encode(test_content).decode('utf-8')
    
    test_data = {
        'action': 'uploadFichaSeguridad',
        'token': str(secure_token),
        'fileName': 'ficha_seg_TEST001.pdf',
        'fileData': test_b64,
        'fileExtension': 'pdf'
    }
    
    try:
        print("üì§ Enviando request de ficha de seguridad...")
        response = requests.post(
            script_url,
            json=test_data,
            headers={'Content-Type': 'application/json'},
            timeout=60
        )
        
        print(f"üì• Status Code: {response.status_code}")
        print(f"üì• Response: {response.text}")
        
        if response.status_code == 200:
            result = response.json()
            if result.get('success'):
                print("‚úÖ Upload de ficha de seguridad exitoso!")
                print(f"   - File ID: {result.get('fileId')}")
                print(f"   - File URL: {result.get('fileUrl')}")
                return True
            else:
                error = result.get('error', 'Error desconocido')
                print(f"‚ùå Error del script: {error}")
                
                # Analizar errores espec√≠ficos
                if 'Unknown action' in error:
                    print("üîß SOLUCI√ìN: El Google Apps Script no tiene la nueva funci√≥n.")
                    print("   1. Copie el c√≥digo actualizado de app.gs")
                    print("   2. Guarde y haga un nuevo deployment")
                    print("   3. Use la nueva URL del deployment")
                
                return False
        else:
            print(f"‚ùå Error HTTP: {response.status_code}")
            return False
            
    except Exception as e:
        print(f"‚ùå Excepci√≥n: {str(e)}")
        return False

def test_environment_config():
    """
    Verifica la configuraci√≥n del entorno
    """
    print("\nüîç Verificando configuraci√≥n del entorno...")
    
    config_issues = []
    
    script_url = os.environ.get('GOOGLE_SCRIPT_URL')
    if not script_url:
        config_issues.append("GOOGLE_SCRIPT_URL no est√° configurada")
    else:
        print(f"‚úÖ GOOGLE_SCRIPT_URL: {script_url}")
    
    token = os.environ.get('GOOGLE_DRIVE_SECURE_TOKEN')
    if not token:
        config_issues.append("GOOGLE_DRIVE_SECURE_TOKEN no est√° configurada")
    else:
        print(f"‚úÖ GOOGLE_DRIVE_SECURE_TOKEN: {token}")
    
    if config_issues:
        print(f"‚ùå Problemas de configuraci√≥n encontrados:")
        for issue in config_issues:
            print(f"   - {issue}")
        return False
    
    return True

def main():
    print("=== DIAGN√ìSTICO DE FICHA DE SEGURIDAD ===\n")
    
    # 1. Verificar configuraci√≥n
    config_ok = test_environment_config()
    
    if not config_ok:
        print("\n‚ùå Configure las variables de entorno antes de continuar")
        return
    
    # 2. Probar conexi√≥n general
    connection_ok = test_google_script_connection()
    
    if not connection_ok:
        print("\n‚ùå No se puede conectar al Google Apps Script")
        print("üîß Verifique la URL y que el script est√© desplegado")
        return
    
    # 3. Probar funci√≥n espec√≠fica
    ficha_ok = test_ficha_seguridad_action()
    
    if ficha_ok:
        print("\n‚úÖ ¬°Todo funciona correctamente!")
    else:
        print("\n‚ùå La funci√≥n de ficha de seguridad no est√° funcionando")
        print("\nüîß PASOS PARA SOLUCIONAR:")
        print("1. Abra Google Apps Script en script.google.com")
        print("2. Copie el c√≥digo actualizado de app.gs")
        print("3. Guarde el proyecto")
        print("4. Haga Deploy > New deployment")
        print("5. Copie la nueva URL y actualice GOOGLE_SCRIPT_URL")
        print("6. Ejecute este diagn√≥stico nuevamente")

if __name__ == "__main__":
    main()
